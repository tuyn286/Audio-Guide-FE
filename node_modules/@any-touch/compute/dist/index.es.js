import{getAngle as t,radianToAngle as n,getVLength as e,getDirection as o}from"@any-touch/vector";import{TYPE_START as r,TYPE_MOVE as i,CLIENT_X as a,CLIENT_Y as c,round2 as u,COMPUTE_INTERVAL as s}from"@any-touch/shared";function p(){let n=0,e=0;return function(o,r){const{prevVecotr:i,startVecotr:a,activeVecotr:c}=r;return c&&(e=Math.round(t(c,i)),n=Math.round(t(c,a))),{angle:n,deltaAngle:e}}}function d(){return function(t){const{prevInput:e}=t;let o=0,r=0,i=0;if(void 0!==e&&(o=t.x-e.x,r=t.y-e.y,0!==o||0!==r)){const t=Math.sqrt(Math.pow(o,2)+Math.pow(r,2));i=Math.round(n(Math.acos(Math.abs(o)/t)))}return{deltaX:o,deltaY:r,deltaXYAngle:i}}}function h(){let t,n=0,u=0,s=0,p=0,d=0;return function(h){const{phase:l,startInput:f}=h;return r===l?(n=0,u=0,s=0,p=0,d=0):i===l&&(n=Math.round(h.points[0][a]-f.points[0][a]),u=Math.round(h.points[0][c]-f.points[0][c]),s=Math.abs(n),p=Math.abs(u),d=Math.round(e({x:s,y:p})),t=o(n,u)),{displacementX:n,displacementY:u,distanceX:s,distanceY:p,distance:d,overallDirection:t}}}function l(){let t=1;return function(n,o){let r=1;const{prevVecotr:i,startVecotr:a,activeVecotr:c}=o;return c&&(r=u(e(c)/e(i)),t=u(e(c)/e(a))),{scale:t,deltaScale:r}}}function f(){let t,n,e=0,r=0,i=0,a=0;return function(c){if(void 0!==c){n=n||c.startInput;const u=c.timestamp-n.timestamp;if(s<u){const s=c.x-n.x,p=c.y-n.y;i=Math.round(s/u*100)/100,a=Math.round(p/u*100)/100,e=Math.abs(i),r=Math.abs(a),t=o(s,p),n=c}}return{velocityX:e,velocityY:r,speedX:i,speedY:a,direction:t}}}function M(){let t=0;return function(n){const{phase:e}=n;return r===e&&(t=n.pointLength),{maxPointLength:t}}}function v(t){return{x:t.points[1][a]-t.points[0][a],y:t.points[1][c]-t.points[0][c]}}function m(){let t,n,e;return function(o){const{prevInput:r,startMultiInput:i}=o;return void 0!==i&&void 0!==r&&o.id!==i.id&&1<r.pointLength&&1<o.pointLength?(t=v(i),n=v(r),e=v(o)):e=void 0,{startVecotr:t,prevVecotr:n,activeVecotr:e}}}export{p as ComputeAngle,d as ComputeDeltaXY,h as ComputeDistance,M as ComputeMaxLength,l as ComputeScale,f as ComputeVAndDir,m as ComputeVectorForMutli};
//# sourceMappingURL=index.es.js.map
